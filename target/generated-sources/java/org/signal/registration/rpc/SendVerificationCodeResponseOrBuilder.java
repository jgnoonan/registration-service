// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: registration_service.proto

// Protobuf Java Version: 3.25.5
package org.signal.registration.rpc;

public interface SendVerificationCodeResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.signal.registration.rpc.SendVerificationCodeResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   **
   * Metadata for the named session. May be absent if the session could not be
   * found or has expired.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.RegistrationSessionMetadata session_metadata = 2;</code>
   * @return Whether the sessionMetadata field is set.
   */
  boolean hasSessionMetadata();
  /**
   * <pre>
   **
   * Metadata for the named session. May be absent if the session could not be
   * found or has expired.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.RegistrationSessionMetadata session_metadata = 2;</code>
   * @return The sessionMetadata.
   */
  org.signal.registration.rpc.RegistrationSessionMetadata getSessionMetadata();
  /**
   * <pre>
   **
   * Metadata for the named session. May be absent if the session could not be
   * found or has expired.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.RegistrationSessionMetadata session_metadata = 2;</code>
   */
  org.signal.registration.rpc.RegistrationSessionMetadataOrBuilder getSessionMetadataOrBuilder();

  /**
   * <pre>
   **
   * If a code could not be sent, explains the underlying error. Will be absent
   * if a code was sent successfully. Note that both an error and session
   * metadata may be present in the same response because the session metadata
   * may include information helpful for resolving the underlying error (i.e.
   * "next attempt" times).
   * </pre>
   *
   * <code>.org.signal.registration.rpc.SendVerificationCodeError error = 3;</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   **
   * If a code could not be sent, explains the underlying error. Will be absent
   * if a code was sent successfully. Note that both an error and session
   * metadata may be present in the same response because the session metadata
   * may include information helpful for resolving the underlying error (i.e.
   * "next attempt" times).
   * </pre>
   *
   * <code>.org.signal.registration.rpc.SendVerificationCodeError error = 3;</code>
   * @return The error.
   */
  org.signal.registration.rpc.SendVerificationCodeError getError();
  /**
   * <pre>
   **
   * If a code could not be sent, explains the underlying error. Will be absent
   * if a code was sent successfully. Note that both an error and session
   * metadata may be present in the same response because the session metadata
   * may include information helpful for resolving the underlying error (i.e.
   * "next attempt" times).
   * </pre>
   *
   * <code>.org.signal.registration.rpc.SendVerificationCodeError error = 3;</code>
   */
  org.signal.registration.rpc.SendVerificationCodeErrorOrBuilder getErrorOrBuilder();
}
