// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: analytics.proto

// Protobuf Java Version: 3.25.5
package org.signal.registration.analytics;

public interface AttemptPendingAnalysisOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.signal.registration.analytics.AttemptPendingAnalysis)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   **
   * The unique identifier for the session in which this attempt took place.
   * </pre>
   *
   * <code>bytes session_id = 1;</code>
   * @return The sessionId.
   */
  com.google.protobuf.ByteString getSessionId();

  /**
   * <pre>
   **
   * The ordinal identifier for this attempt within a session.
   * </pre>
   *
   * <code>uint32 attempt_id = 2;</code>
   * @return The attemptId.
   */
  int getAttemptId();

  /**
   * <pre>
   **
   * The name of the `VerificationCodeSender` used in this attempt.
   * </pre>
   *
   * <code>string sender_name = 3;</code>
   * @return The senderName.
   */
  java.lang.String getSenderName();
  /**
   * <pre>
   **
   * The name of the `VerificationCodeSender` used in this attempt.
   * </pre>
   *
   * <code>string sender_name = 3;</code>
   * @return The bytes for senderName.
   */
  com.google.protobuf.ByteString
      getSenderNameBytes();

  /**
   * <pre>
   **
   * A sender-specific identifier for this attempt; may be empty if the sender
   * does not produce identifiers for each attempt. Sender-specific identifiers
   *are not guaranteed to be unique.
   * </pre>
   *
   * <code>string remote_id = 4;</code>
   * @return The remoteId.
   */
  java.lang.String getRemoteId();
  /**
   * <pre>
   **
   * A sender-specific identifier for this attempt; may be empty if the sender
   * does not produce identifiers for each attempt. Sender-specific identifiers
   *are not guaranteed to be unique.
   * </pre>
   *
   * <code>string remote_id = 4;</code>
   * @return The bytes for remoteId.
   */
  com.google.protobuf.ByteString
      getRemoteIdBytes();

  /**
   * <pre>
   **
   * The message transport via which this attempt took place.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.MessageTransport message_transport = 5;</code>
   * @return The enum numeric value on the wire for messageTransport.
   */
  int getMessageTransportValue();
  /**
   * <pre>
   **
   * The message transport via which this attempt took place.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.MessageTransport message_transport = 5;</code>
   * @return The messageTransport.
   */
  org.signal.registration.rpc.MessageTransport getMessageTransport();

  /**
   * <pre>
   **
   * The type of client that initiated this attempt.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.ClientType client_type = 6;</code>
   * @return The enum numeric value on the wire for clientType.
   */
  int getClientTypeValue();
  /**
   * <pre>
   **
   * The type of client that initiated this attempt.
   * </pre>
   *
   * <code>.org.signal.registration.rpc.ClientType client_type = 6;</code>
   * @return The clientType.
   */
  org.signal.registration.rpc.ClientType getClientType();

  /**
   * <pre>
   **
   * The ISO 3166-1 identifier for the region of the phone number associated
   * with this attempt.
   * </pre>
   *
   * <code>string region = 7;</code>
   * @return The region.
   */
  java.lang.String getRegion();
  /**
   * <pre>
   **
   * The ISO 3166-1 identifier for the region of the phone number associated
   * with this attempt.
   * </pre>
   *
   * <code>string region = 7;</code>
   * @return The bytes for region.
   */
  com.google.protobuf.ByteString
      getRegionBytes();

  /**
   * <pre>
   **
   * The timestamp, in milliseconds since the epoch, at which this attempt took
   * place.
   * </pre>
   *
   * <code>uint64 timestamp_epoch_millis = 8;</code>
   * @return The timestampEpochMillis.
   */
  long getTimestampEpochMillis();

  /**
   * <pre>
   **
   * Indicates whether an account already exists with the given e164 (i.e. this
   * is a "re-registration" attempt).
   * </pre>
   *
   * <code>bool account_exists_with_e164 = 9;</code>
   * @return The accountExistsWithE164.
   */
  boolean getAccountExistsWithE164();

  /**
   * <pre>
   **
   * Indicates whether this attempt to verify a phone number ultimately
   * succeeded.
   * </pre>
   *
   * <code>bool verified = 10;</code>
   * @return The verified.
   */
  boolean getVerified();
}
