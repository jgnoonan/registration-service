micronaut:
  application:
    name: registrationService-test
  server:
    port: -1  # Disable HTTP server
  grpc:
    server:
      port: 50051
  environments:
    development:
      environments: true
  config:
    registration:
      directory:
        type: ENTRA_ID
        entra-id:
          tenant-id: ${ENTRA_TENANT_ID:test-tenant-id}
          client-id: ${ENTRA_CLIENT_ID:test-client-id}
          client-secret: ${ENTRA_CLIENT_SECRET:test-client-secret}
          test-user: ${ENTRA_TEST_USER:test-user}
          test-password: ${ENTRA_TEST_PASSWORD:test-password}
          phone-number-attribute: mobilePhone
      ldap:
        url: ${LDAP_URL:ldap://localhost:11389}  # Use test port
        baseDn: ${LDAP_BASE_DN:dc=test,dc=com}
        bindDn: ${LDAP_BIND_DN:cn=admin,dc=test,dc=com}
        bindPassword: ${LDAP_BIND_PASSWORD:test-bind-password}
        userFilter: ${LDAP_USER_FILTER:(|(uid={0})(mail={0}))}
        phoneNumberAttribute: mobile
        useSsl: false
        minPoolSize: 1
        maxPoolSize: 3
        poolTimeout: 1000
        testUser: test@test.com
        testUserPassword: test
  metrics:
    enabled: false
    export:
      datadog:
        enabled: false
      prometheus:
        enabled: false
        step: PT1M
        descriptions: true

entra:
  tenant-id: ${ENTRA_TENANT_ID:test-tenant-id}
  client-id: ${ENTRA_CLIENT_ID:test-client-id}
  client-secret: ${ENTRA_CLIENT_SECRET:test-client-secret}
  test-user: ${ENTRA_TEST_USER:test-user}
  test-password: ${ENTRA_TEST_PASSWORD:test-password}

twilio:
  verify:
    service-sid: test-service-sid
    service-friendly-name: test-service
    android-app-hash: test-hash
    custom-template-sid: test-template
    custom-template-supported-languages: []
    supported-languages: []

# Metrics configuration
micronaut:
  metrics:
    enabled: false
    export:
      prometheus:
        enabled: false
        step: PT1M
        descriptions: true

# Test-specific configurations
test:
  config:
    registration: {}
  mock:
    enabled: true
  testUser: raja@valuelabs.com
  testUserPassword: Rat3onal
  verification:
    use-phone-number-suffix: true

ldap:
  enabled: false
  test-mode: true
  url: ${LDAP_URL:ldap://localhost:389}
  base-dn: ${LDAP_BASE_DN:dc=test,dc=local}
  use-ssl: false
  bind-password: ${LDAP_BIND_PASSWORD:test-bind-password}
  bind-dn: ${LDAP_BIND_DN:cn=admin,dc=example,dc=com}
  user-filter: ${LDAP_USER_FILTER:(uid={0})}

redis:
  enabled: false
  test-mode: true

micronaut:
  metrics:
    enabled: false

rate-limits:
  leaky-bucket:
    test-bucket:
      maxCapacity: 2
      permitRegenerationPeriod: 1m
      minDelay: 5s

rate-limiter:
  session-creation:
    name: session-creation
    bucket-size: 2
    leak-rate-per-minute: 1
  send-sms-verification-code:
    name: send-sms-verification-code
    bucket-size: 2
    leak-rate-per-minute: 1
    delays: 1m,2m,5m,10m
  send-voice-verification-code:
    name: send-voice-verification-code
    bucket-size: 2
    leak-rate-per-minute: 1
    delays: 1m,5m
    delay-after-first-sms: 1m
  check-verification-code:
    name: check-verification-code
    bucket-size: 2
    leak-rate-per-minute: 1
    delays: 0s,0s,1m,2m

registration:
  session:
    duration: PT10M
    attempts: 5
  rate-limits:
    session-creation:
      bucket-size: 2
      leak-rate-per-minute: 1
    send-sms-verification-code:
      bucket-size: 2
      leak-rate-per-minute: 1
    send-voice-verification-code:
      bucket-size: 2
      leak-rate-per-minute: 1
    check-verification-code:
      bucket-size: 2
      leak-rate-per-minute: 1
  bigtable:
    session-repository:
      table-name: registration-service-test
      column-family-name: d
    attempt-analysis:
      table-name: test-attempts
      column-family-name: test-cf

# Configure rate limiters for testing
rateLimits:
  leakyBucket:
    sessionCreation:
      name: sessionCreation
      maxCapacity: 100
      permitRegenerationPeriod: 1s
      minDelay: 0s
    sendSmsVerificationCode:
      name: sendSmsVerificationCode
      maxCapacity: 100
      permitRegenerationPeriod: 1s
      minDelay: 0s
    sendVoiceVerificationCode:
      name: sendVoiceVerificationCode
      maxCapacity: 100
      permitRegenerationPeriod: 1s
      minDelay: 0s
    checkVerificationCode:
      name: checkVerificationCode
      maxCapacity: 100
      permitRegenerationPeriod: 1s
      minDelay: 0s

rate-limits:
  send-sms-verification-code:
    delays: 1s,2s,5s,10s
  send-voice-verification-code:
    delays: 1s,2s,5s,10s
  check-verification-code:
    delays: 1s,2s,5s,10s

# Test configurations
session-repository:
  bigtable:
    table-name: test-table
    column-family-name: test-family

rate-limits:
  leaky-bucket:
    test-bucket:
      name: test-bucket
      maxCapacity: 2
      permitRegenerationPeriod: 1m
      minDelay: 5s

# Sender selection configuration
selection:
  sms:
    fallback-senders: []
    default-weights: {}
    region-weights: {}
    region-overrides: {}
  voice:
    fallback-senders: []
    default-weights: {}
    region-weights: {}
    region-overrides: {}
